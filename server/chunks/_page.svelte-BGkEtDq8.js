import { c as create_ssr_component, e as escape, d as each, v as validate_component, f as add_attribute, h as null_to_empty, o as onDestroy, i as spread, j as escape_object } from './ssr-DHawkHMs.js';
import 'chart.js/auto';
import { Chart as Chart$1, BarController } from 'chart.js';

const eventPrefix = /^on/;
const events = [];
Object.keys(globalThis).forEach((key) => {
  if (eventPrefix.test(key)) {
    events.push(key.replace(eventPrefix, ""));
  }
});
function useForwardEvents(getRef) {
  const destructors = [];
  onDestroy(() => {
    while (destructors.length) {
      destructors.pop()();
    }
  });
}
function clean(props2) {
  let { data: data2, type: type2, options: options2, plugins: plugins2, children, $$scope, $$slots, ...rest } = props2;
  return rest;
}
const Chart = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { type } = $$props;
  let { data = { datasets: [] } } = $$props;
  let { options = {} } = $$props;
  let { plugins = [] } = $$props;
  let { updateMode = void 0 } = $$props;
  let { chart = null } = $$props;
  let canvasRef;
  let props = clean($$props);
  onDestroy(() => {
    if (chart) chart.destroy();
    chart = null;
  });
  useForwardEvents();
  if ($$props.type === void 0 && $$bindings.type && type !== void 0) $$bindings.type(type);
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  if ($$props.options === void 0 && $$bindings.options && options !== void 0) $$bindings.options(options);
  if ($$props.plugins === void 0 && $$bindings.plugins && plugins !== void 0) $$bindings.plugins(plugins);
  if ($$props.updateMode === void 0 && $$bindings.updateMode && updateMode !== void 0) $$bindings.updateMode(updateMode);
  if ($$props.chart === void 0 && $$bindings.chart && chart !== void 0) $$bindings.chart(chart);
  return `<canvas${spread([escape_object(props)], {})}${add_attribute("this", canvasRef, 0)}></canvas>`;
});
const Bar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  Chart$1.register(BarController);
  let { chart = null } = $$props;
  let props;
  let baseChartRef;
  useForwardEvents();
  if ($$props.chart === void 0 && $$bindings.chart && chart !== void 0) $$bindings.chart(chart);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    props = $$props;
    $$rendered = `${validate_component(Chart, "Chart").$$render(
      $$result,
      Object.assign({}, { type: "bar" }, props, { this: baseChartRef }, { chart }),
      {
        this: ($$value) => {
          baseChartRef = $$value;
          $$settled = false;
        },
        chart: ($$value) => {
          chart = $$value;
          $$settled = false;
        }
      },
      {}
    )}`;
  } while (!$$settled);
  return $$rendered;
});
const css = {
  code: `body.svelte-11kepei.svelte-11kepei,html.svelte-11kepei.svelte-11kepei,table.svelte-11kepei.svelte-11kepei,p.svelte-11kepei.svelte-11kepei,h1.svelte-11kepei.svelte-11kepei,h2.svelte-11kepei.svelte-11kepei,h3.svelte-11kepei.svelte-11kepei,span.svelte-11kepei.svelte-11kepei,div.svelte-11kepei.svelte-11kepei,button.svelte-11kepei.svelte-11kepei{font-family:'Quicksand', sans-serif;color:var(--text-color)}:root{--border-color:#1a284b;--background-light:#f7e1a0;--background-dark:#192b45;--highlighted-dark-background:#2e4a6f;--text-color:#f0d290;--input-background:#fff4d2;--highlight-color:#ecc678;--error-color:#e74c3c;--size-header:180px;--chart-background:rgba(247, 225, 160, 0.6);--button-container-size:60px}html.svelte-11kepei.svelte-11kepei{background-image:url("/sandsand.jpg");background-size:100%;background-position:center}header.svelte-11kepei.svelte-11kepei{background-image:url("/sundial.png");background-size:calc(2 * var(--size-header));background-position:right center;background-repeat:no-repeat;height:var(--size-header);display:flex;justify-content:space-between;align-items:center;padding:0 20px;color:var(--background-dark);text-shadow:2px 2px 4px rgba(0, 0, 0, 0.6);font-size:2.3rem}header.svelte-11kepei h1.svelte-11kepei{color:var(--highlight-color)}table.svelte-11kepei.svelte-11kepei{width:100%;border-collapse:collapse;background-color:var(--background-light);color:var(--text-color)}.selected.svelte-11kepei.svelte-11kepei{background-color:var(--highlighted-dark-background) /* Highlight color for the current day */
  }th.svelte-11kepei.svelte-11kepei,td.svelte-11kepei.svelte-11kepei{border:1px solid var(--border-color);padding:0.8vw}th.svelte-11kepei.svelte-11kepei{background-color:var(--background-dark);color:var(--text-color);cursor:pointer}td.svelte-11kepei span.svelte-11kepei{text-emphasis-color:var(--background-dark);color:var(--border-color)}td.svelte-11kepei input.svelte-11kepei{width:100%;background-color:var(--input-background)}button.svelte-11kepei.svelte-11kepei{background-color:var(--background-light);color:var(--background-dark);border:2px solid var(--border-color);border-radius:8px;padding:10px 20px;font-size:16px;cursor:pointer;transition:all 0.3s ease;box-shadow:0 2px 5px rgba(0, 0, 0, 0.1)}button.svelte-11kepei.svelte-11kepei:hover{background-color:var(--highlight-color);transform:translateY(-2px);box-shadow:0 4px 8px rgba(0, 0, 0, 0.2)}button.svelte-11kepei.svelte-11kepei:active{transform:translateY(0);box-shadow:0 1px 3px rgba(0, 0, 0, 0.1)}th.svelte-11kepei .sort-arrow.svelte-11kepei{margin-left:0.3vw;font-size:0.8em}.center-buttons.svelte-11kepei.svelte-11kepei{text-align:center;margin:1.5vw}.contract-details.svelte-11kepei.svelte-11kepei{color:var(--background-dark);padding:1vw;background-color:var(--highlight-color);border:1px solid var(--border-color);margin-bottom:1vw}.contract-details.svelte-11kepei p.svelte-11kepei{color:var(--background-dark)}.total-row.svelte-11kepei.svelte-11kepei{background-color:var(--highlight-color);font-weight:bold;color:var(--background-dark)}.contract-form.svelte-11kepei input.svelte-11kepei,.contract-form.svelte-11kepei button.svelte-11kepei{display:block;margin-bottom:1vw;font-size:16px;padding:12px;width:100%;box-sizing:border-box;border:2px solid var(--border-color);background-color:var(--background-light);color:var(--background-dark);border-radius:8px;transition:all 0.3s ease}.contract-form.svelte-11kepei input[type="number"].svelte-11kepei{width:auto;min-width:100px;max-width:200px}.contract-form.svelte-11kepei input.svelte-11kepei:focus{outline:none;border-color:var(--highlight-color);box-shadow:0 0 0 3px rgba(236, 198, 120, 0.3)}.contract-form.svelte-11kepei button.svelte-11kepei{cursor:pointer}.contract-form.svelte-11kepei button.svelte-11kepei:hover{background-color:var(--highlight-color)}.error.svelte-11kepei.svelte-11kepei{border:0.2vw solid var(--error-color);animation:svelte-11kepei-flash 0.5s linear infinite alternate}@keyframes svelte-11kepei-flash{0%{border-color:var(--error-color)}100%{border-color:transparent}}.tabs.svelte-11kepei button.svelte-11kepei{background-color:var(--background-light);color:var(--background-dark);border:2px solid var(--border-color);border-radius:8px;padding:10px 20px;margin-right:10px;font-size:16px;cursor:pointer;transition:all 0.3s ease}.tabs.svelte-11kepei button.svelte-11kepei:hover{background-color:var(--highlight-color);transform:translateY(-2px)}.tabs.svelte-11kepei button.active.svelte-11kepei{background-color:var(--highlight-color);font-weight:bold;border-bottom:3px solid var(--border-color)}.chart.svelte-11kepei.svelte-11kepei{background-color:var(--chart-background)
  }.chart.svelte-11kepei.svelte-11kepei{border-radius:10px;border:var(--border-color)
  }.chart-paragraph.svelte-11kepei.svelte-11kepei{text-align:center;margin:2rem auto;padding:2rem;background-color:var(--background-dark);color:var(--text-color);font-size:1.25rem;line-height:1.6;border-radius:12px;box-shadow:0 4px 6px rgba(0, 0, 0, 0.1)}.chart-paragraph.svelte-11kepei strong.svelte-11kepei{color:var(--highlight-color)}h3.svelte-11kepei.svelte-11kepei{position:relative;padding:10px;background-color:var(--light-blue-fade);border-radius:5px;display:inline-block;z-index:1}.contract-form.svelte-11kepei.svelte-11kepei{background-color:var(--background-light);border-radius:12px;padding:2rem;box-shadow:0 4px 6px rgba(0, 0, 0, 0.1);max-width:500px;margin:2rem auto}.contract-form.svelte-11kepei h3.svelte-11kepei{color:var(--background-dark);font-size:1.5rem;margin-bottom:1.5rem;text-align:center;position:relative}.contract-form.svelte-11kepei h3.svelte-11kepei::after{content:'';position:absolute;bottom:-10px;left:50%;transform:translateX(-50%);width:50px;height:3px;background-color:var(--highlight-color)}.contract-form.svelte-11kepei input.svelte-11kepei{width:100%;padding:12px;margin-bottom:1rem;border:2px solid var(--border-color);border-radius:8px;background-color:rgba(255, 255, 255, 0.8);color:var(--background-dark);font-size:1rem;transition:all 0.3s ease}.contract-form.svelte-11kepei input.svelte-11kepei:focus{outline:none;border-color:var(--highlight-color);box-shadow:0 0 0 3px rgba(236, 198, 120, 0.3)}.contract-form.svelte-11kepei input.svelte-11kepei::placeholder{color:rgba(25, 43, 69, 0.6)}.contract-form.svelte-11kepei button.svelte-11kepei{width:100%;padding:12px;background-color:var(--highlight-color);color:var(--background-dark);border:none;border-radius:8px;font-size:1rem;font-weight:bold;cursor:pointer;transition:all 0.3s ease}.contract-form.svelte-11kepei button.svelte-11kepei:hover{background-color:var(--text-color);transform:translateY(-2px);box-shadow:0 4px 8px rgba(0, 0, 0, 0.2)}.contract-form.svelte-11kepei .error.svelte-11kepei{border-color:var(--error-color);animation:svelte-11kepei-shake 0.5s linear}@keyframes svelte-11kepei-shake{0%,100%{transform:translateX(0)}25%{transform:translateX(-5px)}75%{transform:translateX(5px)}}@media(max-width: 600px){.contract-form.svelte-11kepei.svelte-11kepei{padding:1.5rem}.contract-form.svelte-11kepei input.svelte-11kepei,.contract-form.svelte-11kepei button.svelte-11kepei{font-size:0.9rem}}.total-hours.svelte-11kepei.svelte-11kepei{text-align:center}.contract-name.svelte-11kepei.svelte-11kepei{color:var(--background-dark)}.user-info-box.svelte-11kepei.svelte-11kepei{background-color:var(--highlighted-dark-background);color:var(--text-color);border:2px solid var(--border-color);border-radius:8px;padding:1.5rem;margin:1rem auto;width:fit-content;box-shadow:0 4px 6px rgba(0, 0, 0, 0.1)}.user-info-box.svelte-11kepei p.svelte-11kepei{margin:0.5rem 0}.user-info-box.svelte-11kepei.svelte-11kepei{background-color:var(--highlighted-dark-background);color:var(--text-color);border:2px solid var(--border-color);border-radius:8px;padding:1.5rem;margin:1rem auto;width:50%;box-shadow:0 4px 6px rgba(0, 0, 0, 0.1)}.user-info-box.svelte-11kepei.svelte-11kepei{position:relative;border:1px solid #ccc;padding:1rem}.user-info-text.svelte-11kepei.svelte-11kepei{margin-bottom:var(--button-container-size)}.button-container.svelte-11kepei.svelte-11kepei{position:absolute;bottom:1rem;left:50%;transform:translateX(-50%);display:flex;gap:2rem;height:var(--button-container-size);margin:-4px}.update-button.svelte-11kepei.svelte-11kepei,.theme-button.svelte-11kepei.svelte-11kepei{margin:0;background-color:var(--highlight-color);border:none;color:var(--background-dark);cursor:pointer;font-weight:bold;border-radius:8px;transition:all 0.3s ease;text-align:center;padding:0.5rem 1rem}.update-button.svelte-11kepei.svelte-11kepei:hover,.theme-button.svelte-11kepei.svelte-11kepei:hover{background-color:var(--text-color)}.modal.svelte-11kepei.svelte-11kepei{position:fixed;top:50%;left:50%;transform:translate(-50%, -50%);background-color:var(--background-dark);padding:2rem;border:2px solid var(--background-light);border-radius:12px;box-shadow:0 4px 8px rgba(0, 0, 0, 0.2);z-index:1000}.modal-backdrop.svelte-11kepei.svelte-11kepei{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0, 0, 0, 0.5);z-index:999}.modal.svelte-11kepei button.svelte-11kepei{margin-top:1rem}`,
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from \\"svelte\\";\\n  import Chart from 'chart.js/auto';\\n  import { Bar } from \\"svelte-chartjs\\";\\n\\n  let contracts = [];\\n  let newContract = {\\n    name: \\"\\",\\n    id: null,\\n    rate: 0,\\n    address: \\"\\",\\n    notes: \\"\\",\\n    hours: { sunday: 0, monday: 0, tuesday: 0, wednesday: 0, thursday: 0, friday: 0, saturday: 0 }\\n  };\\n\\n  let showForm = false;\\n  let expandedContract = null;\\n  let sortDirection = { field: null, asc: true };\\n\\n  let currentDateTime = new Date();\\n  let name = \\"John Doe\\";\\n  let daysSinceBeginning = 30;\\n  let daysActive = 20;\\n  let showModal = false;\\n\\n  // Update the current date and time every second\\n  onMount(() => {\\n    const interval = setInterval(() => {\\n      currentDateTime = new Date();\\n    }, 1000);\\n\\n    return () => clearInterval(interval); // Clean up interval on component destruction\\n  });\\n\\n  function openModal() {\\n    showModal = true;\\n  }\\n\\n  function closeModal() {\\n    showModal = false;\\n  }\\n\\n  function updateUserDetails(event) {\\n    event.preventDefault();\\n    const formData = new FormData(event.target);\\n    name = formData.get('name');\\n    daysSinceBeginning = parseInt(formData.get('daysSinceBeginning'), 10);\\n    daysActive = parseInt(formData.get('daysActive'), 10);\\n    closeModal();\\n  }\\n\\n  let showColorModal = false;\\n\\n  // Default theme values\\n  let borderColor = '#1a284b';\\n  let backgroundLight = '#f7e1a0';\\n  let backgroundDark = '#192b45';\\n  let highlightedDarkBackground = '#2e4a6f';\\n  let textColor = '#f0d290';\\n  let inputBackground = '#fff4d2';\\n  let highlightColor = '#ecc678';\\n  let errorColor = '#e74c3c';\\n\\n  // Function to apply changes to CSS variables\\n  function applyColorChanges() {\\n    document.documentElement.style.setProperty('--border-color', borderColor);\\n    document.documentElement.style.setProperty('--background-light', backgroundLight);\\n    document.documentElement.style.setProperty('--background-dark', backgroundDark);\\n    document.documentElement.style.setProperty('--highlighted-dark-background', highlightedDarkBackground);\\n    document.documentElement.style.setProperty('--text-color', textColor);\\n    document.documentElement.style.setProperty('--input-background', inputBackground);\\n    document.documentElement.style.setProperty('--highlight-color', highlightColor);\\n    document.documentElement.style.setProperty('--error-color', errorColor);\\n    closeColorModal();\\n  }\\n\\n  function openColorModal() {\\n    showColorModal = true;\\n  }\\n\\n  function closeColorModal() {\\n    showColorModal = false;\\n  }\\n\\n  // Array to track required field errors\\n  let errorFields = {\\n    name: false,\\n    id: false\\n    };\\n\\n    \\n  let activeTab = 0;\\n  let contractIDs = [];\\n  // Function to add a new contract\\n  function addContract() {\\n    // Reset error states\\n    errorFields = {\\n      name: !newContract.name,\\n      id: !newContract.id\\n    };\\n\\n    // Check if required fields are filled out\\n    if (!newContract.name || newContract.id === null || contractIDs.includes(newContract.id)) {\\n      return; // Exit the function if there are errors\\n    }\\n\\n    contracts = [...contracts, { ...newContract, id: newContract.id }];\\n    contractIDs.push(newContract.id);\\n    showForm = false;\\n    resetForm();\\n  }\\n\\n  // Reset form for new entry\\n  function resetForm() {\\n    newContract = {\\n      name: \\"\\",\\n      id: null,\\n      rate: 0,\\n      address: \\"\\",\\n      notes: \\"\\",\\n      hours: { sunday: 0, monday: 0, tuesday: 0, wednesday: 0, thursday: 0, friday: 0, saturday: 0 }\\n    };\\n    errorFields = { name: false, id: false }; // Reset error states\\n  }\\n\\n    // Toggle dropdown for contract details\\n    function toggleContractDetails(contract) {\\n      expandedContract = expandedContract === contract ? null : contract;\\n    }\\n  \\n    // Handle Enter key to submit form\\n    function handleKeyPress(event) {\\n      if (event.key === 'Enter') {\\n        addContract();\\n      }\\n    }\\n  \\n    // Calculate total weekly hours for a contract\\n    function getTotalHours(contract) {\\n      return Object.values(contract.hours).reduce((sum, hours) => sum + parseFloat(hours), 0);\\n    }\\n  \\n    // Calculate total hours per day across all contracts\\n    function getTotalHoursPerDay(day) {\\n      return contracts.reduce((sum, contract) => sum + parseFloat(contract.hours[day] || 0), 0);\\n    }\\n  \\n    // Sorting logic\\n    function sortContractsBy(field) {\\n      if (sortDirection.field === field) {\\n        sortDirection.asc = !sortDirection.asc; // Toggle direction\\n      } else {\\n        sortDirection.field = field;\\n        sortDirection.asc = true; // Default to ascending on first click\\n      }\\n  \\n      if (field === 'name') {\\n        contracts.sort((a, b) => sortDirection.asc ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name));\\n      } else if (field === 'id') {\\n        contracts.sort((a, b) => sortDirection.asc ? a.id - b.id : b.id - a.id);\\n      } else if (field === 'entry') {\\n        contracts.sort((a, b) => sortDirection.asc ? a.id - b.id : b.id - a.id);  // Default sort by entry order\\n      } else {\\n        contracts.sort((a, b) => sortDirection.asc ? a.hours[field] - b.hours[field] : b.hours[field] - a.hours[field]);\\n      }\\n    }\\n\\n  // Current Date Logic\\n\\n  // Get current date and week\\n  let currentWeek = [];\\n  let todayIndex;\\n\\n  function getCurrentWeek() {\\n    const today = new Date();\\n    const dayOfWeek = today.getDay(); // 0 (Sunday) to 6 (Saturday)\\n\\n    // Set the start of the week to the last Sunday\\n    let startOfWeek = new Date(today);\\n    startOfWeek.setDate(today.getDate() - dayOfWeek);\\n\\n    // Populate the week array with dates for each day\\n    currentWeek = [];\\n    for (let i = 0; i < 7; i++) {\\n      const day = new Date(startOfWeek);\\n      day.setDate(startOfWeek.getDate() + i);\\n      currentWeek.push(day);\\n    }\\n\\n    todayIndex = dayOfWeek; // Store index of today for highlighting\\n  }\\n\\n\\n  onMount(() => {\\n    getCurrentWeek();\\n  });\\n  \\n    // Function to get sort arrow for a column\\n    function getSortArrow(field) {\\n      if (sortDirection.field !== field) return ''; // No arrow if not sorted\\n      return sortDirection.asc ? '↑' : '↓';\\n    }\\n  \\n    // Export individual contract data to CSV\\n    function exportContractToCSV(contract) {\\n      const csvContent = \`\\n        Contract Name,Contract ID,Rate,Address,Notes,Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday\\\\n\\n        \${contract.name},\${contract.id},\${contract.rate},\${contract.address},\${contract.notes},\${contract.hours.sunday},\${contract.hours.monday},\${contract.hours.tuesday},\${contract.hours.wednesday},\${contract.hours.thursday},\${contract.hours.friday},\${contract.hours.saturday}\\n      \`;\\n      downloadCSV(csvContent, \`\${contract.name}_contract.csv\`);\\n    }\\n  \\n    // Export all contracts to CSV\\n    function exportAllContractsToCSV() {\\n      let csvContent = \`\\n        Contract Name,Contract ID,Rate,Address,Notes,Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday\\\\n\\n      \`;\\n      contracts.forEach(contract => {\\n        csvContent += \`\${contract.name},\${contract.id},\${contract.rate},\${contract.address},\${contract.notes},\${contract.hours.sunday},\${contract.hours.monday},\${contract.hours.tuesday},\${contract.hours.wednesday},\${contract.hours.thursday},\${contract.hours.friday},\${contract.hours.saturday}\\\\n\`;\\n      });\\n      downloadCSV(csvContent, \`all_contracts.csv\`);\\n    }\\n  \\n    // Helper function to download CSV\\n    function downloadCSV(csvContent, fileName) {\\n      const blob = new Blob([csvContent], { type: \\"text/csv;charset=utf-8;\\" });\\n      const link = document.createElement(\\"a\\");\\n      link.href = URL.createObjectURL(blob);\\n      link.setAttribute(\\"download\\", fileName);\\n      link.click();\\n    }\\n  \\n  function switchTab(index) {\\n    activeTab = index;\\n  }\\n\\n/*\\n   _____  _    _            _____  _______  _____ \\n  / ____|| |  | |    /\\\\    |  __ \\\\|__   __|/ ____|\\n | |     | |__| |   /  \\\\   | |__) |  | |  | (___  \\n | |     |  __  |  / /\\\\ \\\\  |  _  /   | |   \\\\___ \\\\ \\n | |____ | |  | | / ____ \\\\ | | \\\\ \\\\   | |   ____) |\\n  \\\\_____||_|  |_|/_/    \\\\_\\\\|_|  \\\\_\\\\  |_|  |_____/\\n*/\\n\\n\\n\\nlet selectedTabs = [];\\n\\n// Chart options\\nconst options = {\\n  responsive: true,\\n  scales: {\\n    y: {\\n      beginAtZero: true\\n    }\\n  }\\n};\\n\\n// Function to toggle tab selection\\nfunction toggleTab(index) {\\n  if (selectedTabs.includes(index)) {\\n    selectedTabs = selectedTabs.filter(i => i !== index);\\n  } else {\\n    selectedTabs = [...selectedTabs, index];\\n  }\\n}\\n\\n// Function to convert multiple contracts' hours into chart data\\nfunction generateChartData(contracts) {\\n  if (!contracts.length) return {}; // If no contracts selected, return empty\\n\\n  // Colors for each dataset\\n  const colors = [\\n    \\"rgba(75,192,192,0.4)\\",\\n    \\"rgba(255,99,132,0.4)\\",\\n    \\"rgba(54,162,235,0.4)\\",\\n    \\"rgba(255,206,86,0.4)\\"\\n  ];\\n\\n  return {\\n    labels: [\\"Sunday\\", \\"Monday\\", \\"Tuesday\\", \\"Wednesday\\", \\"Thursday\\", \\"Friday\\", \\"Saturday\\"],\\n    datasets: contracts.map((contract, i) => ({\\n      label: \`\${contract.name} Hours\`,\\n      backgroundColor: colors[i % colors.length],\\n      borderColor: colors[i % colors.length].replace(\\"0.4\\", \\"1\\"),\\n      borderWidth: 1,\\n      data: Object.values(contract.hours)\\n    }))\\n  };\\n}  \\n\\n\\n  <\/script>\\n \\n \\n<!--\\n   _____   _____   _____  \\n  / ____| / ____| / ____| \\n | |      | (___  | (___  \\n | |       \\\\___ \\\\  \\\\___ \\\\ \\n | |____   ____) | ____) |\\n  \\\\_____| |_____/ |_____/ \\n-->\\n\\n<style>\\n  body, html, table, p, h1, h2, h3, h4, h5, h6, span, div, a, li, button {\\n    font-family: 'Quicksand', sans-serif;\\n    color: var(--text-color);\\n  }\\n\\n  :root {\\n    /* Egyptian-themed colors */\\n    --border-color: #1a284b; /* Dark blue */\\n    --background-light: #f7e1a0; /* Tan/yellow */\\n    --background-dark: #192b45; /* Deep dark blue */\\n    --highlighted-dark-background: #2e4a6f;\\n    --text-color: #f0d290; /* Light yellowish tan */\\n    --input-background: #fff4d2;\\n    --highlight-color: #ecc678; /* Soft yellow for highlights */\\n    --error-color: #e74c3c; /* Red for errors */\\n    --size-header: 180px;\\n    --chart-background: rgba(247, 225, 160, 0.6);\\n    --button-container-size: 60px;\\n  }\\n  \\n  html {\\n    background-image: url(\\"/sandsand.jpg\\");\\n    background-size: 100%; /* Ensures the image covers the entire page */\\n    background-position: center; /* Centers the image */\\n  }\\n\\n  header {\\n    background-image: url(\\"/sundial.png\\");\\n    background-size: calc(2 * var(--size-header)); /* Scales down the image */\\n    background-position: right center; /* Moves the image to the right */\\n    background-repeat: no-repeat; /* Prevents the image from repeating */\\n    height: var(--size-header); /* Slightly smaller header */\\n    display: flex;\\n    justify-content: space-between; /* Moves text to the left, image to the right */\\n    align-items: center;\\n    padding: 0 20px; /* Add padding to prevent text from sticking to the edge */\\n    color: var(--background-dark);\\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6);\\n    font-size: 2.3rem;\\n  }\\n\\n  header h1 {\\n    color: var(--highlight-color);\\n  }\\n\\n  table {\\n    width: 100%;\\n    border-collapse: collapse;\\n    background-color: var(--background-light);\\n    color: var(--text-color);\\n  }\\n\\n.selected {\\n    background-color: var(--highlighted-dark-background) /* Highlight color for the current day */\\n  }\\n\\n  th, td {\\n    border: 1px solid var(--border-color);\\n    padding: 0.8vw; /* Slightly reduced padding for cleaner spacing */\\n  }\\n\\n  th {\\n    background-color: var(--background-dark);\\n    color: var(--text-color);\\n    cursor: pointer;\\n  }\\n  td span {\\n    text-emphasis-color: var(--background-dark);\\n    color: var(--border-color);\\n  }\\n  td input{\\n    width: 100%;\\n    background-color: var(--input-background);\\n  }\\nbutton {\\n  background-color: var(--background-light);\\n  color: var(--background-dark);\\n  border: 2px solid var(--border-color);\\n  border-radius: 8px;\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n}\\n\\n\\nbutton:hover {\\n  background-color: var(--highlight-color);\\n  transform: translateY(-2px);\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n}\\n\\nbutton:active {\\n  transform: translateY(0);\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n}\\n\\n  th .sort-arrow {\\n    margin-left: 0.3vw;\\n    font-size: 0.8em;\\n  }\\n\\n  .center-buttons {\\n    text-align: center;\\n    margin: 1.5vw;\\n  }\\n\\n  .contract-details {\\n    color: var(--background-dark);\\n    padding: 1vw;\\n    background-color: var(--highlight-color);\\n    border: 1px solid var(--border-color);\\n    margin-bottom: 1vw;\\n  }\\n\\n  .contract-details p {\\n    color: var(--background-dark);\\n  }\\n\\n  .total-row {\\n    background-color: var(--highlight-color);\\n    font-weight: bold;\\n    color: var(--background-dark);\\n  }\\n\\n  /* Form styles */\\n.contract-form input,\\n.contract-form textarea,\\n.contract-form button {\\n  display: block;\\n  margin-bottom: 1vw;\\n  font-size: 16px;\\n  padding: 12px;\\n  width: 100%;\\n  box-sizing: border-box;\\n  border: 2px solid var(--border-color);\\n  background-color: var(--background-light);\\n  color: var(--background-dark);\\n  border-radius: 8px;\\n  transition: all 0.3s ease;\\n}\\n\\n.contract-form input[type=\\"number\\"] {\\n  width: auto;\\n  min-width: 100px;\\n  max-width: 200px;\\n}\\n\\n\\n.contract-form input:focus,\\n.contract-form textarea:focus {\\n  outline: none;\\n  border-color: var(--highlight-color);\\n  box-shadow: 0 0 0 3px rgba(236, 198, 120, 0.3);\\n}\\n\\n\\n.contract-form button {\\n  cursor: pointer;\\n}\\n\\n.contract-form button:hover {\\n  background-color: var(--highlight-color);\\n}\\n\\n  .error {\\n    border: 0.2vw solid var(--error-color);\\n    animation: flash 0.5s linear infinite alternate;\\n  }\\n\\n  @keyframes flash {\\n    0% { border-color: var(--error-color); }\\n    100% { border-color: transparent; }\\n  }\\n\\n.tabs button {\\n  background-color: var(--background-light);\\n  color: var(--background-dark);\\n  border: 2px solid var(--border-color);\\n  border-radius: 8px;\\n  padding: 10px 20px;\\n  margin-right: 10px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n}\\n\\n.tabs button:hover {\\n  background-color: var(--highlight-color);\\n  transform: translateY(-2px);\\n}\\n\\n.tabs button.active {\\n  background-color: var(--highlight-color);\\n  font-weight: bold;\\n  border-bottom: 3px solid var(--border-color);\\n}\\n\\n  .chart {\\n    background-color: var(--chart-background)\\n  }\\n  .chart {\\n    border-radius: 10px;\\n    border: var(--border-color)\\n  }\\n  .chart-paragraph {\\n  text-align: center;\\n  margin: 2rem auto;\\n  padding: 2rem;\\n  background-color: var(--background-dark);\\n  color: var(--text-color);\\n  font-size: 1.25rem;\\n  line-height: 1.6;\\n  border-radius: 12px;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n}\\n\\n.chart-paragraph strong {\\n  color: var(--highlight-color);\\n}\\n\\n  h3 {\\n    position: relative; /* Positioning for the pseudo-element */\\n    padding: 10px; /* Padding to space out the text */\\n    background-color: var(--light-blue-fade); /* Light blue fade background */\\n    border-radius: 5px; /* Rounded corners */\\n    display: inline-block; /* Makes the background only cover the text */\\n    z-index: 1; /* Ensures the background appears below text */\\n  }\\n\\n\\n .contract-form {\\n  background-color: var(--background-light);\\n  border-radius: 12px;\\n  padding: 2rem;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  max-width: 500px;\\n  margin: 2rem auto;\\n}\\n\\n.contract-form h3 {\\n  color: var(--background-dark);\\n  font-size: 1.5rem;\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  position: relative;\\n}\\n\\n.contract-form h3::after {\\n  content: '';\\n  position: absolute;\\n  bottom: -10px;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  width: 50px;\\n  height: 3px;\\n  background-color: var(--highlight-color);\\n}\\n\\n.contract-form input,\\n.contract-form textarea {\\n  width: 100%;\\n  padding: 12px;\\n  margin-bottom: 1rem;\\n  border: 2px solid var(--border-color);\\n  border-radius: 8px;\\n  background-color: rgba(255, 255, 255, 0.8);\\n  color: var(--background-dark);\\n  font-size: 1rem;\\n  transition: all 0.3s ease;\\n}\\n\\n.contract-form input:focus,\\n.contract-form textarea:focus {\\n  outline: none;\\n  border-color: var(--highlight-color);\\n  box-shadow: 0 0 0 3px rgba(236, 198, 120, 0.3);\\n}\\n\\n.contract-form input::placeholder,\\n.contract-form textarea::placeholder {\\n  color: rgba(25, 43, 69, 0.6);\\n}\\n\\n.contract-form button {\\n  width: 100%;\\n  padding: 12px;\\n  background-color: var(--highlight-color);\\n  color: var(--background-dark);\\n  border: none;\\n  border-radius: 8px;\\n  font-size: 1rem;\\n  font-weight: bold;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n}\\n\\n.contract-form button:hover {\\n  background-color: var(--text-color);\\n  transform: translateY(-2px);\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n}\\n\\n.contract-form .error {\\n  border-color: var(--error-color);\\n  animation: shake 0.5s linear;\\n}\\n\\n@keyframes shake {\\n  0%, 100% { transform: translateX(0); }\\n  25% { transform: translateX(-5px); }\\n  75% { transform: translateX(5px); }\\n}\\n\\n/* Responsive adjustments */\\n@media (max-width: 600px) {\\n  .contract-form {\\n    padding: 1.5rem;\\n  }\\n  \\n  .contract-form input,\\n  .contract-form textarea,\\n  .contract-form button {\\n    font-size: 0.9rem;\\n  }\\n} \\n\\n.total-hours {\\n  text-align: center;\\n}\\n\\n.contract-name {\\n  color: var(--background-dark);\\n}\\n\\n.user-info-box {\\n  background-color: var(--highlighted-dark-background);\\n  color: var(--text-color);\\n  border: 2px solid var(--border-color);\\n  border-radius: 8px;\\n  padding: 1.5rem;\\n  margin: 1rem auto;\\n  width: fit-content;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n}\\n\\n.user-info-box p {\\n  margin: 0.5rem 0;\\n}\\n\\n.user-info-box {\\n    background-color: var(--highlighted-dark-background);\\n    color: var(--text-color);\\n    border: 2px solid var(--border-color);\\n    border-radius: 8px;\\n    padding: 1.5rem;\\n    margin: 1rem auto;\\n    width: 50%;\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  }\\n\\n\\n  .user-info-box {\\n    position: relative;\\n    border: 1px solid #ccc; /* Optional styling */\\n    padding: 1rem;\\n  }\\n  .user-info-text {\\n    margin-bottom: var(--button-container-size);\\n  }\\n\\n  .button-container {\\n    position: absolute;\\n    bottom: 1rem;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    display: flex;\\n    gap: 2rem; \\n    height: var(--button-container-size);\\n    margin: -4px;\\n  }\\n\\n  .update-button, .theme-button {\\n    margin: 0; \\n    background-color: var(--highlight-color);\\n    border: none;\\n    color: var(--background-dark);\\n    cursor: pointer;\\n    font-weight: bold;\\n    border-radius: 8px;\\n    transition: all 0.3s ease;\\n    text-align: center;\\n    padding: 0.5rem 1rem;\\n  }\\n\\n  .update-button:hover, .theme-button:hover {\\n    background-color: var(--text-color);\\n  } \\n  .modal {\\n    position: fixed;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    background-color: var(--background-dark);\\n    padding: 2rem;\\n    border: 2px solid var(--background-light);\\n    border-radius: 12px;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n    z-index: 1000;\\n  }\\n\\n  .modal-backdrop {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: rgba(0, 0, 0, 0.5);\\n    z-index: 999;\\n  }\\n\\n  .modal button {\\n    margin-top: 1rem;\\n  }\\n\\n</style>\\n\\n\\n<html>\\n\\n<head>\\n  <link rel=\\"preconnect\\" href=\\"https://fonts.googleapis.com\\">\\n  <link rel=\\"preconnect\\" href=\\"https://fonts.gstatic.com\\" crossorigin>\\n  <link href=\\"https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap\\" rel=\\"stylesheet\\"></head>\\n<header>\\n  <h1>Dialed in Hour Tracker</h1>\\n\\n</header>\\n<body>\\n\\n  <div class=\\"user-info-box\\">\\n    <div class=\\"user-info-text\\">\\n      <p><strong>Name:</strong> {name}</p>\\n      <p><strong>Current Date/Time:</strong> {currentDateTime.toLocaleString()}</p>\\n      <p><strong>Days Since Beginning:</strong> {daysSinceBeginning} days</p>\\n      <p><strong>Days Active:</strong> {daysActive} days</p>\\n    </div>\\n    <div class=\\"button-container\\">\\n      <button class=\\"update-button\\" on:click={openModal}>Update User Details</button>\\n      <button class=\\"theme-button\\" on:click={openColorModal}>Change Theme</button>\\n    </div>\\n  </div>\\n\\n  {#if showColorModal}\\n    <div class=\\"modal\\">\\n      <div class=\\"modal-content\\">\\n        <h2>Update Theme Colors</h2>\\n        <label>Border Color: <input type=\\"color\\" bind:value={borderColor} /></label>\\n        <label>Background Light: <input type=\\"color\\" bind:value={backgroundLight} /></label>\\n        <label>Background Dark: <input type=\\"color\\" bind:value={backgroundDark} /></label>\\n        <label>Highlighted Dark Background: <input type=\\"color\\" bind:value={highlightedDarkBackground} /></label>\\n        <label>Text Color: <input type=\\"color\\" bind:value={textColor} /></label>\\n        <label>Input Background: <input type=\\"color\\" bind:value={inputBackground} /></label>\\n        <label>Highlight Color: <input type=\\"color\\" bind:value={highlightColor} /></label>\\n        <label>Error Color: <input type=\\"color\\" bind:value={errorColor} /></label>\\n\\n        <button on:click={applyColorChanges}>Apply Changes</button>\\n        <button on:click={closeColorModal}>Close</button>\\n      </div>\\n    </div>\\n  {/if}\\n\\n  {#if showModal}\\n    <div class=\\"modal-backdrop\\" on:click={closeModal}></div>\\n    <div class=\\"modal\\">\\n      <h3>Update User Details</h3>\\n      <form on:submit={updateUserDetails}>\\n        <label>\\n          Name:\\n          <input type=\\"text\\" name=\\"name\\" value={name} required />\\n        </label>\\n        <label>\\n          Days Since Beginning:\\n          <input type=\\"number\\" name=\\"daysSinceBeginning\\" value={daysSinceBeginning} min=\\"0\\" required />\\n        </label>\\n        <label>\\n          Days Active:\\n          <input type=\\"number\\" name=\\"daysActive\\" value={daysActive} min=\\"0\\" required />\\n        </label>\\n        <button type=\\"submit\\">Update</button>\\n        <button type=\\"button\\" on:click={closeModal}>Cancel</button>\\n      </form>\\n    </div>\\n  {/if}\\n  <table>\\n    <thead>\\n      <tr>\\n        <th on:click={() => sortContractsBy('name')}>Contract <span class=\\"sort-arrow\\">{getSortArrow('name')}</span></th>\\n        {#each currentWeek as day, index}\\n          <th \\n            on:click={() => sortContractsBy(day.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase())} \\n            class:selected={index === todayIndex}\\n          >\\n            {day.toLocaleDateString('en-US', { weekday: 'long', day: 'numeric' })} \\n            <span class=\\"sort-arrow\\">{getSortArrow(day.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase())}</span>\\n          </th>\\n        {/each}\\n        <th>Details</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      {#each contracts as contract}\\n        <tr>\\n          <td class=\\"contract-name\\">{contract.name}</td>\\n          {#each currentWeek as day, index}\\n            <td class:selected={index === todayIndex}>\\n              <input type=\\"number\\" bind:value={contract.hours[day.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase()]} />\\n            </td>\\n          {/each}\\n          <td>\\n            <div>\\n              <button on:click={() => toggleContractDetails(contract)}>Details</button>\\n            </div>\\n            <div class=\\"total-hours\\">\\n              <span>{getTotalHours(contract)} hrs</span>\\n            </div>\\n          </td>\\n        </tr>\\n        {#if expandedContract === contract}\\n          <tr>\\n            <td colspan=\\"9\\">\\n              <div class=\\"contract-details\\">\\n                <p><strong>ID:</strong> {contract.id}</p>\\n                <p><strong>Rate:</strong> {contract.rate}</p>\\n                <p><strong>Address:</strong> {contract.address}</p>\\n                <p><strong>Notes:</strong> {contract.notes}</p>\\n                <button on:click={() => exportContractToCSV(contract)}>Export Contract to CSV</button>\\n              </div>\\n            </td>\\n          </tr>\\n        {/if}\\n      {/each}\\n      <tr class=\\"total-row\\">\\n        <td>Total</td>\\n        {#each currentWeek as day}\\n          <td>{getTotalHoursPerDay(day.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase())}</td>\\n        {/each}\\n        <td></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  \\n  <div class=\\"center-buttons\\">\\n    <button on:click={() => showForm = true}>Add New Contract</button>\\n    <button on:click={exportAllContractsToCSV}>Export All Contracts</button>\\n  </div>\\n  \\n  {#if showForm}\\n    <div class=\\"contract-form\\">\\n      <h3>New Contract</h3>\\n      <input type=\\"text\\" placeholder=\\"Contract Name\\" bind:value={newContract.name} class:error={errorFields.name} required on:keypress={handleKeyPress} />\\n      <input type=\\"number\\" placeholder=\\"Contract ID\\" bind:value={newContract.id} class:error={errorFields.id} required on:keypress={handleKeyPress} />\\n      <input type=\\"number\\" placeholder=\\"Rate (Optional)\\" bind:value={newContract.rate} on:keypress={handleKeyPress} />\\n      <input type=\\"text\\" placeholder=\\"Address (Optional)\\" bind:value={newContract.address} on:keypress={handleKeyPress} />\\n      <input placeholder=\\"Notes (Optional)\\" bind:value={newContract.notes} on:keypress={handleKeyPress}/>\\n      <button on:click={addContract}>Add Contract</button>\\n    </div>\\n  {/if} \\n  \\n\\n<!-- Tab Navigation -->\\n<div class=\\"tabs\\">\\n  {#each contracts as contract, index}\\n    <button\\n      class=\\"{selectedTabs.includes(index) ? 'active' : ''}\\"\\n      on:click={() => toggleTab(index)}\\n    >\\n      {contract.name}\\n    </button>\\n  {/each}\\n</div>\\n\\n<!-- Chart Display -->\\n<div class=\\"chart-container\\">\\n  {#if selectedTabs.length > 0}\\n    <div class=\\"chart\\">\\n      <Bar {options} data={generateChartData(selectedTabs.map(index => contracts[index]))} />\\n    </div>\\n    <p class=\\"chart-paragraph\\">\\n      This chart displays the data for the selected contracts. <strong>Hover over the bars</strong> to see detailed information. The x-axis represents the contract names, while the y-axis shows the contract values.\\n    </p>\\n  {:else}\\n    <p class=\\"chart-paragraph\\">\\n      <strong>Waiting for Selection...</strong>\\n    </p>\\n  {/if}\\n</div>\\n\\n</body>\\n</html>"],"names":[],"mappings":"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"}`
};
function getTotalHours(contract) {
  return Object.values(contract.hours).reduce((sum, hours) => sum + parseFloat(hours), 0);
}
function generateChartData(contracts) {
  if (!contracts.length) return {};
  const colors = [
    "rgba(75,192,192,0.4)",
    "rgba(255,99,132,0.4)",
    "rgba(54,162,235,0.4)",
    "rgba(255,206,86,0.4)"
  ];
  return {
    labels: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    datasets: contracts.map((contract, i) => ({
      label: `${contract.name} Hours`,
      backgroundColor: colors[i % colors.length],
      borderColor: colors[i % colors.length].replace("0.4", "1"),
      borderWidth: 1,
      data: Object.values(contract.hours)
    }))
  };
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let contracts = [];
  let expandedContract = null;
  let sortDirection = { field: null, asc: true };
  let currentDateTime = /* @__PURE__ */ new Date();
  let name = "John Doe";
  let daysSinceBeginning = 30;
  let daysActive = 20;
  function getTotalHoursPerDay(day) {
    return contracts.reduce((sum, contract) => sum + parseFloat(contract.hours[day] || 0), 0);
  }
  let currentWeek = [];
  let todayIndex;
  function getSortArrow(field) {
    if (sortDirection.field !== field) return "";
    return "↑";
  }
  let selectedTabs = [];
  const options = {
    responsive: true,
    scales: { y: { beginAtZero: true } }
  };
  $$result.css.add(css);
  return `  <html class="svelte-11kepei"><head data-svelte-h="svelte-vxlwww"><link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&amp;display=swap" rel="stylesheet"></head> <header class="svelte-11kepei" data-svelte-h="svelte-19htpef"><h1 class="svelte-11kepei">Dialed in Hour Tracker</h1></header> <body class="svelte-11kepei"><div class="user-info-box svelte-11kepei"><div class="user-info-text svelte-11kepei"><p class="svelte-11kepei"><strong data-svelte-h="svelte-obrarj">Name:</strong> ${escape(name)}</p> <p class="svelte-11kepei"><strong data-svelte-h="svelte-1czd1rt">Current Date/Time:</strong> ${escape(currentDateTime.toLocaleString())}</p> <p class="svelte-11kepei"><strong data-svelte-h="svelte-13qs7da">Days Since Beginning:</strong> ${escape(daysSinceBeginning)} days</p> <p class="svelte-11kepei"><strong data-svelte-h="svelte-xfsslj">Days Active:</strong> ${escape(daysActive)} days</p></div> <div class="button-container svelte-11kepei"><button class="update-button svelte-11kepei" data-svelte-h="svelte-1v0ftes">Update User Details</button> <button class="theme-button svelte-11kepei" data-svelte-h="svelte-1mbegcw">Change Theme</button></div></div> ${``} ${``} <table class="svelte-11kepei"><thead><tr><th class="svelte-11kepei">Contract <span class="sort-arrow svelte-11kepei">${escape(getSortArrow("name"))}</span></th> ${each(currentWeek, (day, index) => {
    return `<th class="${["svelte-11kepei", index === todayIndex ? "selected" : ""].join(" ").trim()}">${escape(day.toLocaleDateString("en-US", { weekday: "long", day: "numeric" }))} <span class="sort-arrow svelte-11kepei">${escape(getSortArrow(day.toLocaleDateString("en-US", { weekday: "long" }).toLowerCase()))}</span> </th>`;
  })} <th class="svelte-11kepei" data-svelte-h="svelte-jx02qk">Details</th></tr></thead> <tbody>${each(contracts, (contract) => {
    return `<tr><td class="contract-name svelte-11kepei">${escape(contract.name)}</td> ${each(currentWeek, (day, index) => {
      return `<td class="${["svelte-11kepei", index === todayIndex ? "selected" : ""].join(" ").trim()}"><input type="number" class="svelte-11kepei"${add_attribute("value", contract.hours[day.toLocaleDateString("en-US", { weekday: "long" }).toLowerCase()], 0)}> </td>`;
    })} <td class="svelte-11kepei"><div class="svelte-11kepei"><button class="svelte-11kepei" data-svelte-h="svelte-8e2azd">Details</button></div> <div class="total-hours svelte-11kepei"><span class="svelte-11kepei">${escape(getTotalHours(contract))} hrs</span></div> </td></tr> ${expandedContract === contract ? `<tr><td colspan="9" class="svelte-11kepei"><div class="contract-details svelte-11kepei"><p class="svelte-11kepei"><strong data-svelte-h="svelte-usfrkd">ID:</strong> ${escape(contract.id)}</p> <p class="svelte-11kepei"><strong data-svelte-h="svelte-fsokru">Rate:</strong> ${escape(contract.rate)}</p> <p class="svelte-11kepei"><strong data-svelte-h="svelte-cx7xue">Address:</strong> ${escape(contract.address)}</p> <p class="svelte-11kepei"><strong data-svelte-h="svelte-5k9uvd">Notes:</strong> ${escape(contract.notes)}</p> <button class="svelte-11kepei" data-svelte-h="svelte-16shjx">Export Contract to CSV</button> </div></td> </tr>` : ``}`;
  })} <tr class="total-row svelte-11kepei"><td class="svelte-11kepei" data-svelte-h="svelte-1u00c7s">Total</td> ${each(currentWeek, (day) => {
    return `<td class="svelte-11kepei">${escape(getTotalHoursPerDay(day.toLocaleDateString("en-US", { weekday: "long" }).toLowerCase()))}</td>`;
  })} <td class="svelte-11kepei"></td></tr></tbody></table> <div class="center-buttons svelte-11kepei"><button class="svelte-11kepei" data-svelte-h="svelte-1hdsed7">Add New Contract</button> <button class="svelte-11kepei" data-svelte-h="svelte-g27xfl">Export All Contracts</button></div> ${``}  <div class="tabs svelte-11kepei">${each(contracts, (contract, index) => {
    return `<button class="${escape(null_to_empty(selectedTabs.includes(index) ? "active" : ""), true) + " svelte-11kepei"}">${escape(contract.name)} </button>`;
  })}</div>  <div class="chart-container svelte-11kepei">${selectedTabs.length > 0 ? `<div class="chart svelte-11kepei">${validate_component(Bar, "Bar").$$render(
    $$result,
    {
      options,
      data: generateChartData(selectedTabs.map((index) => contracts[index]))
    },
    {},
    {}
  )}</div> <p class="chart-paragraph svelte-11kepei" data-svelte-h="svelte-1j8kixf">This chart displays the data for the selected contracts. <strong class="svelte-11kepei">Hover over the bars</strong> to see detailed information. The x-axis represents the contract names, while the y-axis shows the contract values.</p>` : `<p class="chart-paragraph svelte-11kepei" data-svelte-h="svelte-1d4emvf"><strong class="svelte-11kepei">Waiting for Selection...</strong></p>`}</div></body></html>`;
});

export { Page as default };
//# sourceMappingURL=_page.svelte-BGkEtDq8.js.map
